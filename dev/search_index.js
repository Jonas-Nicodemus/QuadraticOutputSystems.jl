var documenterSearchIndex = {"docs":
[{"location":"#QuadraticOutputSystems","page":"Home","title":"QuadraticOutputSystems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for QuadraticOutputSystems.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A toolbox for control systems with quadratic output in Julia.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The considered systems are of the form","category":"page"},{"location":"","page":"Home","title":"Home","text":"    Sigmaquadleftquadbeginaligned\n\t\tdotx(t) = Ax(t) + Bu(t)\n\t\ty(t) = Cx(t) + \n        left\n        beginarrayc\n            x(t)^top M_1 x(t)\n            vdots  \n            x(t)^top M_p x(t)\n        endarray\n        right\n\tendalignedright","category":"page"},{"location":"","page":"Home","title":"Home","text":"where the output can be written as","category":"page"},{"location":"","page":"Home","title":"Home","text":"    y(t) = Cx(t) + M(x(t)otimes x(t)) quad textwith quad\n    M= \n    leftbeginarrayc\n        mathrmvec(M_1)^top\n        vdots\n        mathrmvec(M_p)^top\n    endarrayright\n    in mathbbR^p times n^2","category":"page"},{"location":"","page":"Home","title":"Home","text":"This toolbox is based and inspired by ControlSystems.jl and implements the results from [1].","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install, in the Julia REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg; Pkg.add(url=\"https://github.com/Jonas-Nicodemus/QuadraticOutputSystems.jl\")","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using QuadraticOutputSystems, ControlSystems\n\nA = [-2 1; -1 -1]\nB = [6; 0]\nC = [6 0]\nM = 1//2*vec([1 0; 0 1])'\n\nΣ = qoss(A, B, C, M)\n# This generates the system:\n# QuadraticOutputStateSpace{Rational{Int64}}\n# A = \n#  -2//1   1//1\n#  -1//1  -1//1\n# B = \n#  6//1\n#  0//1\n# C = \n#  6//1  0//1\n# M = \n#  1//2  0//1  0//1  1//2\n\n# Compute the Gramians of the system\ngram(Σ, :c)\ngram(Σ, :o)\n\n# Compute the H2-norm of the system\nh2norm(Σ) # 17.521415467935235\n\n# Given a second system Σr, we can compute the H2-inner product and the H2-error\nΣr = qoss(A[1,1], B[1], C[1], M[1])\n\nh2inner(Σ, Σr) # 318.2485207100592\nh2norm(Σ - Σr)^2 # 14.75295857988162\nh2norm(Σ)^2 + h2norm(Σr)^2 - 2*h2inner(Σ, Σr) # 14.75295857988162","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"P. Benner, P. Goyal and I. P. Duff. Gramians, Energy Functionals, and Balanced Truncation for Linear Dynamical Systems With Quadratic Outputs. IEEE Transactions on Automatic Control 67, 886–893 (2022).\n\n\n\n","category":"page"},{"location":"API/","page":"API","title":"API","text":"","category":"page"},{"location":"API/#QuadraticOutputSystems.QuadraticOutputStateSpace","page":"API","title":"QuadraticOutputSystems.QuadraticOutputStateSpace","text":"QuadraticOutputStateSpace{T}\n\nAn object representing a quadratic output state space system.\n\ndx(t)/dt = Ax(t) + Bu(t)\ny(t)     = Cx(t) + M(x(t)⊗x(t))\n\nSee the function qoss for a user facing constructor.\n\nFields:\n\nA::Matrix{T}\nB::Matrix{T}\nC::Matrix{T}\nM::Matrix{T}\n\n\n\n\n\n","category":"type"},{"location":"API/#ControlSystemsBase.gram-Tuple{QuadraticOutputStateSpace, Symbol}","page":"API","title":"ControlSystemsBase.gram","text":"X = gram(Σqo::QuadraticOutputStateSpace, opt::Symbol; kwargs...)\n\nReturns the Gramian of system Σqo. If opt is :c  it returns the controllability Gramian by calling the  ControlSystems.gram from ControlSystems package. If opt is :o it returns the observability Gramian by solving the Lyapunov equation\n\nA'X + XA + MPM = 0,\n\nwhere P is the controllability Gramian of Σqo.\n\n\n\n\n\n","category":"method"},{"location":"API/#ControlSystemsBase.grampd-Tuple{QuadraticOutputStateSpace, Symbol}","page":"API","title":"ControlSystemsBase.grampd","text":"L = grampd(Σqo::QuadraticOutputStateSpace, opt::Symbol; kwargs...)\n\nReturns a Cholesky factor L of the Gramian of system Σqo. If opt is :c  it returns the controllability Gramian by calling the  ControlSystems.grampd from ControlSystems package. If opt is :o it returns the Cholesky factor of the observability Gramian by solving the Lyapunov equation\n\nA'X + XA + MPM = 0,\n\nwhere P is the controllability Gramian of Σqo.\n\n\n\n\n\n","category":"method"},{"location":"API/#ControlSystemsBase.lsim-Tuple{QuadraticOutputStateSpace, Function, AbstractVector}","page":"API","title":"ControlSystemsBase.lsim","text":"result = lsim(Σqo, u, t; kwargs...)\n\nCalculate the time response of the quadratic output state-space model Σqo::QuadraticOutputStateSpace{T} by first treating it as standard state-space model and calling ControlSystems.lsim on it, and then calculating the quadratic part of the output and add it to the linear par.\n\n\n\n\n\n","category":"method"},{"location":"API/#LinearAlgebra.norm","page":"API","title":"LinearAlgebra.norm","text":"norm(Σqo, p=2; kwargs...)\nh2norm(Σqo; kwargs...)\n\nComputes the H2 norm of the quadratic output state-space model Σqo::QuadraticOutputStateSpace.\n\n\n\n\n\n","category":"function"},{"location":"API/#QuadraticOutputSystems.h2inner","page":"API","title":"QuadraticOutputSystems.h2inner","text":"h2inner(Σ1, Σ2)\n\nComputes the H2 inner product of the quadratic output state-space models  Σ1::QuadraticOutputStateSpace and Σ2::QuadraticOutputStateSpace.\n\n\n\n\n\n","category":"function"},{"location":"API/#QuadraticOutputSystems.qoss-Tuple","page":"API","title":"QuadraticOutputSystems.qoss","text":"Σqo = qoss(A, B, C, M)\nΣqo = qoss(A, B, M)\n\nCreates a quadratic output state-space model Σqo::QuadraticOutputStateSpace{T} with matrix element type T.\n\n\n\n\n\n","category":"method"}]
}
